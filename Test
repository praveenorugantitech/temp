@Override
public void fetchFileAndStore(String url, String folderPath) {
    String token = authService.getToken();
    String trackingId = UUID.randomUUID().toString();
    
    try {
        // Prepare headers
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + token);
        headers.setAccept(Collections.singletonList(MediaType.MULTIPART_FORM_DATA));
        
        // Build the entity with headers
        HttpEntity<String> entity = new HttpEntity<>(headers);
        
        // Use RestTemplate to perform the request
        ResponseEntity<byte[]> response = restTemplate.exchange(
                url + "?compress=true",
                HttpMethod.GET,
                entity,
                byte[].class
        );
        
        if (response.getStatusCode() == HttpStatus.OK && response.getBody() != null) {
            byte[] fileData = response.getBody();
            String batchFileName = extractFileName(response.getHeaders());

            if (fileData != null && batchFileName != null) {
                saveFile(fileData, batchFileName, folderPath);
            } else {
                System.out.println("Failed to download or extract the file name.");
            }
        } else {
            System.out.println("Failed to download or extract the file.");
        }
    } catch (HttpStatusCodeException e) {
        Log.error("Received error status while retrieving Batch File with trackingId {} : {} - {}",
                trackingId, e.getStatusCode(), e.getResponseBodyAsString());
    } catch (Exception e) {
        Log.error("Failed to retrieve Batch File with trackingId {} : {}", trackingId, e.getMessage());
    }
}
