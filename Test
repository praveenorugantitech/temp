@Override
public void fetchFileAndStore(String url, String folderPath) {
    String token = authService.getToken();
    String trackingId = UUID.randomUUID().toString();

    try {
        // Prepare headers
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + token);
        headers.setAccept(Collections.singletonList(MediaType.MULTIPART_FORM_DATA));

        // Build the entity with headers
        HttpEntity<String> entity = new HttpEntity<>(headers);

        // Use RestTemplate to perform the request
        ResponseEntity<byte[]> response = restTemplate.exchange(
                url + "?compress=true",
                HttpMethod.GET,
                entity,
                byte[].class
        );

        if (response.getStatusCode() == HttpStatus.OK && response.getBody() != null) {
            byte[] fileData = response.getBody();
            
            // Convert response body to String to extract Content-Disposition
            String responseBody = new String(fileData, StandardCharsets.UTF_8);
            
            // Extract 'Content-Disposition' to get file name
            String fileName = extractFileNameFromContentDisposition(responseBody);
            
            if (fileName != null) {
                // Save the file using the extracted filename
                saveFile(fileData, fileName, folderPath);
            } else {
                System.out.println("Failed to extract the file name.");
            }
        } else {
            System.out.println("Failed to download or extract the file.");
        }
    } catch (HttpStatusCodeException e) {
        Log.error("Received error status while retrieving Batch File with trackingId {} : {} - {}",
                trackingId, e.getStatusCode(), e.getResponseBodyAsString());
    } catch (Exception e) {
        Log.error("Failed to retrieve Batch File with trackingId {} : {}", trackingId, e.getMessage());
    }
}

/**
 * Extract the file name from the Content-Disposition part of the response body.
 */
private String extractFileNameFromContentDisposition(String responseBody) {
    // Use regex or string operations to find 'fileName' from the content-disposition
    String fileName = null;

    // Look for 'Content-Disposition' with 'fileName'
    Pattern pattern = Pattern.compile("filename=\"([^\"]+)\"");
    Matcher matcher = pattern.matcher(responseBody);
    
    if (matcher.find()) {
        fileName = matcher.group(1);  // Get the fileName from the regex group
    }
    
    return fileName;
}
