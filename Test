@Override
public void fetchFileAndStore(String url, String folderPath) {
    String token = authService.getToken();
    String trackingId = UUID.randomUUID().toString();

    try {
        // Prepare headers
        HttpHeaders headers = new HttpHeaders();
        headers.set("Authorization", "Bearer " + token);
        headers.setAccept(Collections.singletonList(MediaType.MULTIPART_FORM_DATA));

        // Build the entity with headers
        HttpEntity<String> entity = new HttpEntity<>(headers);

        // Use RestTemplate to perform the request
        ResponseEntity<byte[]> response = restTemplate.exchange(
                url + "?compress=true",
                HttpMethod.GET,
                entity,
                byte[].class
        );

        if (response.getStatusCode() == HttpStatus.OK && response.getBody() != null) {
            byte[] fileData = response.getBody();
            
            // Convert response body to String to extract Content-Disposition
            String responseBody = new String(fileData, StandardCharsets.UTF_8);
            
            // Extract 'Content-Disposition' from the response body
            String contentDisposition = extractContentDisposition(responseBody);
            
            if (contentDisposition != null && contentDisposition.contains("filename=")) {
                // Extract the filename from the Content-Disposition part
                String fileName = contentDisposition.split("filename=")[1].replace("\"", "");
                
                // Save the file using the extracted filename
                saveFile(fileData, fileName, folderPath);
            } else {
                System.out.println("Failed to extract the file name from Content-Disposition.");
            }
        } else {
            System.out.println("Failed to download or extract the file.");
        }
    } catch (HttpStatusCodeException e) {
        Log.error("Received error status while retrieving Batch File with trackingId {} : {} - {}",
                trackingId, e.getStatusCode(), e.getResponseBodyAsString());
    } catch (Exception e) {
        Log.error("Failed to retrieve Batch File with trackingId {} : {}", trackingId, e.getMessage());
    }
}

/**
 * Extract Content-Disposition part from the response body.
 */
private String extractContentDisposition(String responseBody) {
    // Use regex or string operations to find the Content-Disposition in the body
    String contentDisposition = null;
    
    // Look for a line that contains 'Content-Disposition'
    if (responseBody.contains("Content-Disposition")) {
        // Assume it's in the format 'Content-Disposition: attachment; filename="example.txt"'
        int startIndex = responseBody.indexOf("Content-Disposition");
        int endIndex = responseBody.indexOf("\n", startIndex); // Assuming it's a single line
        if (endIndex == -1) {
            endIndex = responseBody.length();
        }
        contentDisposition = responseBody.substring(startIndex, endIndex).trim();
    }
    
    return contentDisposition;
}
